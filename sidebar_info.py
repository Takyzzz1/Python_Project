# ===============================
# üìÅ sidebar_info.py
# ===============================
import streamlit as st
import pandas as pd
from api_utils import get_sample_country_info_api,get_country_info_detail


def render_sidebar(merged_df):
    """Hi·ªÉn th·ªã sidebar th√¥ng tin qu·ªëc gia + AI (phi√™n b·∫£n c√≥ lazy loading)"""

    # --- Header ---
    st.sidebar.header("Th√¥ng tin qu·ªëc gia")

    # --- Dropdown ch·ªçn qu·ªëc gia ---
    country_list = merged_df["country_name"].sort_values().tolist()
    selected_country = st.sidebar.selectbox(
        "Ch·ªçn qu·ªëc gia",
        options=["-- Ch·ªçn qu·ªëc gia --"] + country_list,
        index=0
    )

    # N·∫øu ch∆∞a ch·ªçn (v·∫´n ·ªü placeholder)
    if selected_country == "-- Ch·ªçn qu·ªëc gia --":
        st.sidebar.info("‚¨ÖÔ∏è Vui l√≤ng ch·ªçn m·ªôt qu·ªëc gia ƒë·ªÉ xem th√¥ng tin chi ti·∫øt.")
        return None, None

    # ===============================
    # üß≠ Khi ng∆∞·ªùi d√πng ƒë√£ ch·ªçn qu·ªëc gia
    # ===============================
    country_data = merged_df[merged_df["country_name"] == selected_country].iloc[0]
    iso3_code = country_data["code"]

    # --- L·∫•y d·ªØ li·ªáu chi ti·∫øt t·ª´ API ---
    country_info = get_country_info_detail(country_data["code"])

    # --- Hi·ªÉn th·ªã th√¥ng tin chi ti·∫øt ---
    st.sidebar.subheader(f"üåç {selected_country}")

    if "error" not in country_info:
        st.sidebar.write(f"**M√£ ISO3:** `{country_info['code']}`")
        st.sidebar.write(f"**T√™n ch√≠nh th·ª©c:** {country_info['official']}")
        st.sidebar.write(f"**Th·ªß ƒë√¥:** {country_info['capital']}")
        st.sidebar.write(f"**Khu v·ª±c:** {country_info['region']} ({country_info['subregion']})")
        st.sidebar.write(f"**Di·ªán t√≠ch:** {country_info['area']:.2f} km¬≤")
        st.sidebar.write(f"**D√¢n s·ªë:** {country_info['population']:,}")
        st.sidebar.write(f"**M√∫i gi·ªù:** {', '.join(country_info['timezones'])}")
        st.sidebar.write(f"**T·ªça ƒë·ªô:** ({country_info['latitude']:.2f}, {country_info['longitude']:.2f})")
        st.sidebar.write(f"**M·ª©c thu nh·∫≠p:** {country_info['income_level']}")

        # Ti·ªÅn t·ªá
        if (curr := country_info.get("currencies")):
            st.sidebar.write("**Ti·ªÅn t·ªá:** " + ", ".join(
                [f"{k}: {v.get('name')} ({v.get('symbol', 'N/A')})" for k, v in curr.items()]
            ))

        # Ng√¥n ng·ªØ
        if (langs := country_info.get("languages")):
            st.sidebar.write("**Ng√¥n ng·ªØ:** " + ", ".join([f"{k}: {v}" for k, v in langs.items()]))

        # Bi√™n gi·ªõi
        borders = ", ".join(country_info["borders"]) if country_info.get("borders") else "Kh√¥ng c√≥"
        st.sidebar.write(f"**Bi√™n gi·ªõi:** {borders}")
    else:
        st.sidebar.error(country_info["error"])

    # --- Tr·∫£ v·ªÅ k·∫øt qu·∫£ cho main page ---
    return selected_country, iso3_code
